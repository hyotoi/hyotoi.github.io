name: Sync from muse_profile

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 12 * *"  # 매일 낮 12시
  repository_dispatch:
    types: [sync_triggered]  # 외부에서 API로 트리거

permissions:
  contents: write          # 브랜치/릴리스 생성
  pull-requests: write     # PR 생성

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      UPSTREAM_OWNER: ehdwn1991
      UPSTREAM_REPO: muse_profile

    steps:
      - name: Detect target branch
        id: detect
        run: |
          echo "BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
          echo "ts=$(date -u +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      - name: Sync fork via REST API (merge-upstream)
        id: merge_upstream
        env:
          GH_OWNER: ${{ github.repository_owner }}
          GH_REPO:  ${{ github.event.repository.name }}
          BRANCH:   ${{ env.BRANCH }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "➡️ Syncing ${GH_OWNER}/${GH_REPO}:${BRANCH} from upstream (merge-upstream API)…"
          RESP_CODE=$(curl -sS -w "%{http_code}" -o /tmp/resp.json -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${GH_OWNER}/${GH_REPO}/merge-upstream" \
            -d "{\"branch\":\"${BRANCH}\"}")

          # Normalize (defensive against stray whitespace)
          CODE_TRIM=$(printf "%s" "${RESP_CODE}" | tr -cd '0-9')

          echo "HTTP ${CODE_TRIM}"
          echo "Response:" && cat /tmp/resp.json || true

          # Set default output to whatever we saw first
          echo "code=${CODE_TRIM}" >> $GITHUB_OUTPUT

          # === Special handling ===
          # Some upstreams contain workflow file updates. GitHub App tokens may receive 422
          # with a message like "refusing to allow a GitHub App to create or update workflow …".
          # Treat this as a PR-needed case (same as 409).
          if [ "${CODE_TRIM}" = "422" ] || grep -qi 'refusing to allow a GitHub App to create or update workflow' /tmp/resp.json; then
            echo "⚠️  Received 422 (workflow update not permitted). Falling back to PR flow."
            echo "code=409" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [ "${CODE_TRIM}" = "200" ]; then
            echo "✅ Fast-forward 완료 (Sync fork)."
            exit 0
          fi

          if [ "${CODE_TRIM}" = "409" ]; then
            echo "⚠️ 충돌 또는 fast-forward 불가. PR로 처리 단계로 진행합니다."
            exit 0
          fi

          # Unknown code: do not fail here; let a dedicated step handle failing with context
          echo "❓ 예상치 못한 코드: ${CODE_TRIM}. Downstream step will fail the job."
          exit 0

      - name: Fail on unexpected HTTP code
        if: ${{ steps.merge_upstream.outputs.code != '200' && steps.merge_upstream.outputs.code != '409' }}
        run: |
          echo "merge-upstream returned code='${{ steps.merge_upstream.outputs.code }}' which is not handled"
          exit 1

      # === 200 처리: 릴리스 자동 생성 (자동 릴리스 노트) ===
      - name: Create auto-generated release notes
        if: steps.merge_upstream.outputs.code == '200'
        env:
          GH_OWNER: ${{ github.repository_owner }}
          GH_REPO:  ${{ github.event.repository.name }}
          BRANCH:   ${{ env.BRANCH }}
          TS:       ${{ env.ts }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TAG="sync-${BRANCH}-${TS}"
          TITLE="🤖 Sync upstream on ${TS} (${BRANCH})"
          echo "➡️ Creating release ${TAG}"
          curl -sS -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${GH_OWNER}/${GH_REPO}/releases" \
            -d "{
              \"tag_name\": \"${TAG}\",
              \"target_commitish\": \"${BRANCH}\",
              \"name\": \"${TITLE}\",
              \"generate_release_notes\": true
            }" \
            | tee /tmp/release.json

      # === 409 처리: 자동 PR 생성 ===
      - name: Checkout (for PR branch creation)
        if: steps.merge_upstream.outputs.code == '409'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare PR branch from upstream tip
        if: steps.merge_upstream.outputs.code == '409'
        env:
          BRANCH: ${{ env.BRANCH }}
        run: |
          set -euo pipefail
          git remote remove upstream 2>/dev/null || true
          git remote add upstream "https://github.com/${UPSTREAM_OWNER}/${UPSTREAM_REPO}.git"
          git fetch upstream --prune --tags
          NEW_BRANCH="sync/${BRANCH}-${{ env.ts }}"
          git checkout -B "${NEW_BRANCH}" "upstream/${BRANCH}"
          git push origin "${NEW_BRANCH}"
          echo "NEW_BRANCH=${NEW_BRANCH}" >> $GITHUB_ENV

      - name: Open Pull Request (upstream → fork base)
        if: steps.merge_upstream.outputs.code == '409'
        env:
          GH_OWNER: ${{ github.repository_owner }}
          GH_REPO:  ${{ github.event.repository.name }}
          BRANCH:   ${{ env.BRANCH }}
          NEW_BRANCH: ${{ env.NEW_BRANCH }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          TITLE="Sync upstream into ${BRANCH}"
          BODY="This PR was created automatically because the fork could not be fast-forwarded via **merge-upstream**.\n\n- Base: \`${BRANCH}\`\n- Head: \`${NEW_BRANCH}\`\n\nAfter merge, the fork will be aligned with upstream."
          PR_RESP=$(curl -sS -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${GH_OWNER}/${GH_REPO}/pulls" \
            -d "{
              \"title\": \"${TITLE}\",
              \"head\": \"${NEW_BRANCH}\",
              \"base\": \"${BRANCH}\",
              \"body\": ${BODY@Q}
            }")
          echo "${PR_RESP}"
